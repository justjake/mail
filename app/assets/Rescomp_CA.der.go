package assets

import (
	"bytes"
	"compress/gzip"
	"io"
)

// rescomp_ca_der returns raw, uncompressed file data.
func rescomp_ca_der() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x32,0x68,
0x62,0xe9,0x30,0x68,0x62,0xfe,0xb8,0x80,0x99,0x89,0x91,0x89,
0x89,0x91,0xc1,0x80,0x97,0x8d,0x53,0xab,0xcd,0xa3,0xed,0x3b,
0x2f,0x23,0x23,0x0b,0x2b,0x83,0x41,0xe3,0x69,0x43,0x6e,0x03,
0x4e,0x36,0xe6,0x50,0x16,0x36,0x61,0xa6,0xd0,0x60,0x43,0x61,
0x03,0x41,0x10,0x87,0x43,0x98,0xcb,0x39,0x31,0x27,0x33,0x2d,
0xbf,0x28,0x2f,0x33,0xd1,0x50,0xd0,0x80,0x1f,0x24,0xc8,0x2e,
0xcc,0xe1,0x94,0x5a,0x94,0x9d,0x9a,0x93,0x5a,0x69,0xa8,0x6d,
0xa0,0x09,0x12,0xe2,0x12,0x56,0x0a,0xcd,0xcb,0x2c,0x4b,0x2d,
0x2a,0xce,0x2c,0xa9,0x54,0xc8,0x4f,0x53,0x40,0xe8,0xd2,0x51,
0x80,0x2b,0x96,0x33,0x90,0x01,0x29,0xe6,0x16,0x16,0x0d,0x4a,
0x2d,0xce,0x4c,0x49,0xcd,0x2b,0xc9,0x4c,0xcc,0x51,0x70,0xce,
0xcf,0x2d,0x28,0x2d,0xc9,0xcc,0x4b,0x37,0x94,0x35,0x90,0x06,
0xc9,0x33,0x0b,0x8b,0x00,0xe5,0x93,0x81,0xc2,0x7a,0x30,0xad,
0x7a,0xae,0x2e,0xa1,0x86,0x1a,0x06,0x6a,0x70,0x47,0x73,0x32,
0x8a,0x49,0x16,0xe5,0xe7,0x97,0x38,0x14,0x41,0x55,0x26,0xc1,
0x54,0xa6,0xa6,0x94,0x1a,0xc8,0x89,0xf3,0x1a,0x98,0x1a,0x18,
0x1b,0x5a,0x1a,0x98,0x18,0x1b,0x18,0x9a,0x46,0x89,0xf3,0x1a,
0x82,0xb8,0xe6,0x50,0xee,0x30,0xf3,0x6d,0xe3,0x7c,0xe4,0xd8,
0x64,0x64,0x65,0x60,0x6e,0xec,0x05,0xc6,0x68,0x27,0x53,0x63,
0x23,0xc3,0x05,0xb1,0xb7,0xaf,0x94,0x2c,0x3d,0x36,0x66,0x2c,
0x70,0x54,0xf3,0x14,0x62,0x2d,0x6c,0x59,0x1a,0xb4,0xeb,0xc1,
0x87,0x9a,0xb0,0x4c,0x3e,0xdf,0x33,0x19,0xde,0x95,0xf5,0xe1,
0x07,0x57,0xec,0x9e,0xcc,0xcc,0xcc,0x70,0xe0,0xb7,0xd4,0xb9,
0xe7,0x4c,0x7c,0x3e,0xaf,0x2e,0xe6,0x38,0x8a,0x5c,0x7a,0x18,
0x96,0xa5,0xfd,0x6b,0x8f,0x68,0xb9,0x0d,0x73,0xcd,0xd3,0x20,
0xad,0xe3,0x47,0x16,0xf8,0x55,0xd6,0xbe,0x9f,0xc7,0xa7,0xce,
0xd5,0xf1,0x32,0xf6,0xc0,0x77,0xd5,0xc7,0xef,0x4f,0x87,0xed,
0xfa,0x18,0xb1,0x75,0xda,0x83,0x8c,0x47,0xeb,0x96,0xfb,0x5e,
0x56,0x9b,0xb0,0x5d,0x5b,0xe3,0xe9,0x05,0x86,0x87,0xd3,0xef,
0xd5,0x6c,0x30,0x70,0x6f,0x35,0x3f,0xb5,0x2f,0x50,0x73,0xf2,
0x4b,0x05,0x7b,0x55,0x53,0x26,0x66,0x46,0x06,0xc6,0xc5,0x4d,
0x8c,0x15,0x06,0x4d,0x8c,0x25,0x06,0xb2,0x40,0x0f,0xcb,0xf2,
0xb1,0x88,0xb1,0x88,0xbc,0x78,0xd6,0xa7,0x5d,0x99,0x96,0xf6,
0xcf,0xf3,0xe3,0x34,0xa7,0x95,0x01,0x5c,0xff,0x3e,0x57,0xe8,
0xd9,0x19,0x34,0xfe,0x00,0xc9,0x2b,0xb3,0x34,0x7e,0x30,0x68,
0x7c,0xdb,0x80,0x55,0xcd,0xc2,0xc6,0x8b,0x4b,0x1a,0xcf,0x0d,
0xaf,0x08,0x6c,0x02,0x66,0x47,0x1e,0x90,0xcf,0x85,0x59,0x58,
0x0d,0x98,0x19,0x19,0xff,0x1b,0xa8,0x80,0x78,0x82,0x2c,0x40,
0x0b,0x1a,0xf1,0xc4,0x3b,0x58,0x95,0x10,0x21,0x55,0xa8,0x19,
0x9d,0x19,0x98,0x26,0x76,0xa4,0xdc,0x88,0x9e,0xbc,0xe0,0x36,
0x43,0x84,0xa0,0x7d,0x71,0x18,0xcf,0xce,0x1c,0xd9,0xbf,0x77,
0xab,0x96,0x29,0xdf,0x8b,0xea,0x0f,0xf0,0x76,0xb0,0x3e,0xf3,
0x3c,0xfb,0xd4,0xda,0xfa,0xac,0x17,0xd7,0xf4,0xb7,0x6b,0x2a,
0xba,0xed,0x90,0x10,0x52,0x0d,0x58,0x5d,0xf0,0xfe,0xff,0xff,
0xa7,0x5b,0xa3,0x75,0x79,0x14,0xa3,0xc2,0xae,0xcf,0xf0,0x28,
0xb8,0x78,0xf1,0xfb,0x34,0x99,0x04,0xa3,0x8f,0xea,0xf7,0x9c,
0xa3,0x17,0xf8,0x89,0xac,0x5f,0x6d,0x3e,0x79,0xc3,0xf2,0xd3,
0x02,0xbf,0x8c,0xf6,0xed,0xdf,0xc8,0xe4,0x9e,0x26,0xb2,0x46,
0x61,0xfd,0x8b,0x27,0x9d,0xab,0xa5,0x6b,0xa6,0xff,0xb8,0xf0,
0xdd,0xef,0x83,0xdf,0xa3,0xd9,0xcc,0x31,0xc7,0x0a,0xf8,0xed,
0x98,0x94,0x57,0x6c,0xbd,0x9f,0xa9,0x0e,0x08,0x00,0x00,0xff,
0xff,0x77,0x3a,0x21,0xad,0x8c,0x04,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}